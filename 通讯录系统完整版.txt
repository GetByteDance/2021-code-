#define _CRT_SECURE_NO_WARNINGS 1
#include<iostream>
#include<string>
#define MAX 1000
using namespace std;
void printfMenu()
{
	cout << "****************************" << endl;
	cout << "*****  1、添加联系人   *****"<< endl;
	cout << "*****  2、显示联系人   *****"<< endl;
	cout << "*****  3、删除联系人   *****"<< endl;
	cout << "*****  4、查找联系人   *****"<< endl;
	cout << "*****  5、修改联系人   *****"<< endl;
	cout << "*****  6、删除联系人   *****"<< endl;
	cout << "*****  0、退出通讯录   *****"<< endl;
	cout << "****************************" << endl;
	cout << "     请输入序号执行操作"<<endl;
}
//联系人结构体
struct Person
{
	string m_Name;//姓名
	int m_Sex;//性别 1男  2女
	int m_Age;//年龄
	string m_Phone;//电话
	string m_Addr;//地址
};
//通讯录结构体
struct Addressbooks
{
	struct Person personArray[MAX];//通讯录中保存的联系人数组
	int m_Size;//通讯录中人员个数

};
void addPerson(Addressbooks *abs)
{
	//先判断通讯录人数有没有满
	if (abs->m_Size == MAX)
	{
		cout << "通讯录已满，无法添加" << endl;
		return;
	}
	else
	{
		//姓名
		string name;
		cout << "请输入姓名：" << endl;
		cin >> name;
		abs->personArray[abs->m_Size].m_Name = name;

		//性别
		while (true)
		{
			cout << "请输入性别：1男  2女" << endl;
			int sex = 0;
			cin >> sex;
			if (sex == 1 || sex == 2)
			{
				abs->personArray[abs->m_Size].m_Sex = sex;
				break;
			}
			else
			{
				cout << "输入错误，请重新输入！" << endl;
			}
		}
		
		//年龄
		cout << "请输入年龄：" << endl;
		int age = 0;
		cin >> age;
		abs->personArray[abs->m_Size].m_Age = age;
		
		//电话
		cout << "请输入电话" << endl; 
		string phone;
		cin >> phone;
		abs->personArray[abs->m_Size].m_Phone = phone;

		//地址
		cout << "请输入地址" << endl;
		string address;
		cin >> address;
		abs->personArray[abs->m_Size].m_Addr = address;

		//更新通讯录人数
		abs->m_Size++;
		cout << "添加成功" << endl;
		
		//清屏
		system("pause");
		system("cls");
	}
}
//显示联系人
void showPerson(Addressbooks*abs)
{
	if (abs->m_Size == 0)
	{
		cout << "当前记录为空" << endl;
	}
	else
	{
		cout << " 姓名：""\t""性别：""\t""年龄：""\t""电话：""\t\t""住址：" << endl;
		for (int i = 0; i < abs->m_Size; i++)
		{
			cout << abs->personArray[i].m_Name << "\t";
			cout << " "<< (abs->personArray[i].m_Sex==1?"男":"女")<< "\t";
			cout << " " << abs->personArray[i].m_Age << "\t";
			cout << abs->personArray[i].m_Phone << "\t";
			cout << abs->personArray[i].m_Addr << endl;
		}
	}
	system("pause");
	system("cls");
}
//检查是否存在此人
int is_Exist(Addressbooks*abs, string name)
{
	for (int i = 0; i < abs->m_Size; i++)
	{
		if (abs->personArray[i].m_Name == name)
		{
			return i;
		}
		return -1;
	}
}
void deletePerson(Addressbooks*abs)
{
	cout << "请输入要删除的联系人姓名" << endl;
	string name;
	cin >> name;
	int ret = is_Exist(abs, name);
	if (ret != -1)
	{
		for (int i = ret; i < abs->m_Size; i++)
		{
			abs->personArray[i] = abs->personArray[i + 1];
		}
		abs->m_Size--;
		cout << "删除成功" << endl;
	}
	else
	{
		cout << "查无此人" << endl;
	}
	system("pause");
	system("cls");
}
//查找联系人
void findPerson(Addressbooks*abs)
{
	cout << "请输入要查找的联系人" << endl;
	string name;
	cin >> name;
	int ret = is_Exist(abs,name);
	if (ret != -1)
	{
		cout << "姓名：" << abs->personArray[ret].m_Name << "\t";
		cout << "性别：" << (abs->personArray[ret].m_Sex == 1?"男":"女") << "\t";
		cout << "年龄：" << abs->personArray[ret].m_Age << "\t";
		cout << "电话：" << abs->personArray[ret].m_Phone << "\t";
		cout << "住址：" << abs->personArray[ret].m_Addr << endl;
	}
	else
	{
		cout << "查无此人" << endl;
	}
	system("pause");
	system("cls");
}
void modifyPerson(Addressbooks*abs)
{
	cout << "请输入要修改的联系人" << endl;
	string name;
	cin >> name;
	int ret = is_Exist(abs, name);
	if (ret != -1)
	{
		//姓名
		cout << "请输入修改后的姓名" << endl;
		string name;
		cin >> name;
		abs->personArray[ret].m_Name = name;
		//性别
		cout << "请输入修改后的性别" << "1 男  2 女" << endl;
		int sex = 0;
		while (true)
		{
			cin >> sex;
			if (sex == 1 || sex == 2)
			{
				abs->personArray[ret].m_Sex = sex;
				break;
			}
			cout << "输入有误，请重新输入" << endl;
		}
		//年龄
		cout << "请输入修改后的年龄" << endl;
		int age = 0;
		cin >> age;
		abs->personArray[ret].m_Age = age;
		//电话
		cout << "请输入修改后的联系电话" << endl;
		string phone; 
		cin >> phone;
		abs->personArray[ret].m_Phone = phone;
		//地址
		cout << "请输入修改后的家庭地址" << endl;
		string address;
		cin>>address;
		abs->personArray[ret].m_Addr = address;

		cout << "修改成功" << endl;
	}
	else
	{
		cout << "查无此人" << endl;
	}
	system("pause");
	system("cls");
}
void cleanPerson(Addressbooks*abs)
{
	cout << "您确定要清除全部联系人吗？  " << "1 是  2 返回" << endl;
	int select = 0;
	while (true)
	{
		cin >> select;
		if (select == 1)
		{
			abs->m_Size = 0;
			cout << "联系人已清空" << endl;
			system("pause");
			system("cls");
			break;
		}
		else if (select == 2)
		{
			system("pause");
			system("cls");
			break;
		}
		else
		{
			cout << "输入错误，请重新输入" << endl;
		}
	}
}
int main()
{
	//创建通讯录
	Addressbooks abs;
	//初始化通讯录人数
	abs.m_Size = 0;
	int select;
	while (true)
	{
		printfMenu();
		cin >> select;
		switch (select)
		{
		case 1://添加联系人
			addPerson(&abs);
			break;
		case 2://显示联系人
			showPerson(&abs);
			break;
		case 3://删除联系人
		{
	    deletePerson(&abs);
		break;
		}
		case 4://查找联系人
			findPerson(&abs);
			break;
		case 5://修改联系人
			modifyPerson(&abs);
			break;
		case 6://删除联系人
			cleanPerson(&abs);
			break;
		case 0://退出通讯录
			cout << "欢迎下次使用" << endl;
			system("pause");
			return 0;
			break;
		}
	}
	system("pause");
	return 0;
}