#define _CRT_SECURE_NO_WARNINGS 1
#include<iostream>
#include<string>
#define MAX 1000
using namespace std;
void printfMenu()
{
	cout << "****************************" << endl;
	cout << "*****  1、添加联系人   *****"<< endl;
	cout << "*****  2、显示联系人   *****"<< endl;
	cout << "*****  3、删除联系人   *****"<< endl;
	cout << "*****  4、查找联系人   *****"<< endl;
	cout << "*****  5、修改联系人   *****"<< endl;
	cout << "*****  6、删除联系人   *****"<< endl;
	cout << "*****  0、退出通讯录   *****"<< endl;
	cout << "****************************" << endl;
}
//联系人结构体
struct Person
{
	string m_Name;//姓名
	int m_Sex;//性别 1男  2女
	int m_Age;//年龄
	string m_Phone;//电话
	string m_Addr;//地址
};
//通讯录结构体
struct Addressbooks
{
	struct Person personArray[MAX];//通讯录中保存的联系人数组
	int m_Size;//通讯录中人员个数

};
void addPerson(Addressbooks *abs)
{
	//先判断通讯录人数有没有满
	if (abs->m_Size == MAX)
	{
		cout << "通讯录已满，无法添加" << endl;
		return;
	}
	else
	{
		//姓名
		string name;
		cout << "请输入姓名：" << endl;
		cin >> name;
		abs->personArray[abs->m_Size].m_Name = name;

		//性别
		while (true)
		{
			cout << "请输入性别：1男  2女" << endl;
			int sex = 0;
			cin >> sex;
			if (sex == 1 || sex == 2)
			{
				abs->personArray[abs->m_Size].m_Sex = sex;
				break;
			}
			else
			{
				cout << "输入错误，请重新输入！" << endl;
			}
		}
		
		//年龄
		cout << "请输入年龄：" << endl;
		int age = 0;
		cin >> age;
		abs->personArray[abs->m_Size].m_Age = age;
		
		//电话
		cout << "请输入电话" << endl; 
		string phone;
		cin >> phone;
		abs->personArray[abs->m_Size].m_Phone = phone;

		//地址
		cout << "请输入地址" << endl;
		string address;
		cin >> address;
		abs->personArray[abs->m_Size].m_Addr = address;

		//更新通讯录人数
		abs->m_Size++;
		cout << "添加成功" << endl;
		
		//清屏
		system("pause");
		system("cls");
	}
}
int main()
{
	//创建通讯录
	Addressbooks abs;
	//初始化通讯录人数
	abs.m_Size = 0;
	int select;
	while (true)
	{
		printfMenu();
		cin >> select;
		switch (select)
		{
		case 1://添加联系人
			addPerson(&abs);
			break;
		case 2://显示联系人
			
			break;
		case 3://删除联系人
			
			break;
		case 4://查找联系人

			break;
		case 5://修改联系人

			break;
		case 6://删除联系人
			
			break;
		case 0://退出通讯录
			cout << "欢迎下次使用" << endl;
			break;
		}
	}
	system("pause");
	return 0;
}