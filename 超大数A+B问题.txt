核心思想是小学列算式 
1.用字符代替数字，这样想算多长的数算多长，不受大小限制 
2.长字符放在a[]里面，短字符放在b[]里面 
3.从个位下手，有大于10就产生进位，前一位就加1；（感谢章健松同学，在章键松同学基础上改动）
4. 
代码如下：
#define _CRT_SECURE_NO_WARNINGS 1
#define _CRT_SECURE_NO_WARNINGS 1
#include<iostream>
using namespace std;
int main(){
	using namespace std;
	int t, s = 1, i;
	cin >> t;
	while (t--){
		char a[1000], b[1000], c[1000], d[1000], e[1000];
		cin >> a >> b;
		strcpy(d, a); strcpy(e, b);
		int len1, len2, len3, len4;
		len1 = strlen(a);
		len2 = strlen(b);
		if (len1<len2){ strcpy(c, a); strcpy(a, b); strcpy(b, c); }//a是更长数
		len3 = len1<len2 ? len1 : len2;
		len4 = len1>len2 ? len1 : len2;
		for (i = 0; i<len3; i++){
			a[len4 - 1 - i] = a[len4 - 1 - i] + b[len3 - 1 - i] - '0';//字符型要减去'0'
			if (a[len4 - 1 - i]>'9' && (len4 - 1 - i )>0){//字符比较    或者是a[len4-1-i]-'0'>9//这一行增加了一个判断条件
				a[len4 - 2 - i]++;
				a[len4 - 1 - i] -= 10;
			}
		}
		if (a[0] > '9')//以下为修改部分
		{
			a[0] = a[0] - 10;
			printf("Case %d:\n", s++);
			printf("%s + %s = 1%s\n", d, e, a);
			if (t != 0)printf("\n");
		}
		else
		{
			printf("Case %d:\n", s++);
			printf("%s + %s = %s\n", d, e, a);
			if (t != 0)printf("\n");
		}
	}
	return 0;
}


----------------------------------------------------------------------------------